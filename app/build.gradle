plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("kotlin-parcelize")
    id("com.google.devtools.ksp")
    id("dagger.hilt.android.plugin")

}

android {
    compileSdk = ProjectConfig.compileSdk
    defaultConfig {
        applicationId ="com.uxstate.countriespad"
        minSdk = ProjectConfig.minSdk
        targetSdk =ProjectConfig.targetSdk
        versionCode  =1
        versionName ="1.0"
        multiDexEnabled = true
        testInstrumentationRunner ="androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }


    //Kotlin Block - makes sure that the KSP Plugin looks at
// the right paths when it comes to generated classes

    kotlin {
        sourceSets {
            debug {
                kotlin.srcDir("build/generated/ksp/debug/kotlin")
            }
            release {
                kotlin.srcDir("build/generated/ksp/release/kotlin")
            }
        }
    }

    buildTypes {
        release {

            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
    }


    compileOptions {
        sourceCompatibility =JavaVersion.VERSION_18
        targetCompatibility= JavaVersion.VERSION_18

    }
    kotlinOptions {
        jvmTarget = "18"
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = ProjectConfig.kotlinCompilerExtensionVersion
    }

    packaging {
        resources {
            it.excludes += "/META-INF/{AL2.0,LGPL2.1}"

        }
    }


    namespace = "com.uxstate.countriespad"
}

dependencies {

    implementation(libs.core.ktx)
    implementation(libs.ui)
    implementation(libs.ui.tooling.preview)
    implementation(libs.lifecycle.runtime.compose)
    implementation(libs.lifecycle.runtime.ktx)
    implementation(libs.activity.compose)
    testImplementation(libs.junit.junit)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.espresso.core)
    androidTestImplementation(libs.ui.test.junit4)
    debugImplementation(libs.ui.tooling)
    debugImplementation(libs.ui.test.manifest)

    //Material 3
    implementation(libs.material3)

    // Coil
    implementation(libs.coil.compose)

    // Dagger Hilt
    implementation(libs.hilt.android)
    ksp(libs.hilt.compiler)
    implementation(libs.hilt.navigation.compose)

    // Retrofit
    implementation(libs.retrofit)
    implementation(libs.converter.moshi)
    implementation(libs.okhttp)
    implementation(libs.logging.interceptor)
    implementation(libs.converter.scalars)

    //Moshi Library Dependencies - Core Moshi JSON Library and Moshi")s Kotlin support and converter factory
    implementation(libs.moshi)
    implementation(libs.moshi.kotlin)

    // Room components
    implementation(libs.room.runtime)
    ksp(libs.room.compiler)
    implementation(libs.room.ktx)

    // Kotlin Extensions and Coroutines support for Room
    implementation(libs.room.ktx)

    //Timber
    implementation(libs.timber)

    //Flow Layout
    implementation(libs.accompanist.flowlayout)

    //Lottie Animation
    implementation(libs.lottie.compose)

    // Compose Nav Destinations
    implementation(libs.io.github.raamcosta.compose.destinations.core)
    ksp(libs.ksp)

    //Maps Compose library
    implementation(libs.maps.compose)
    implementation(libs.play.services.maps)

    //Kompose Country Code Picker
    implementation(libs.komposecountrycodepicker)

    //Multi Dex
    implementation(libs.multidex)

    //Modules

    implementation(project(":core:ui"))
    implementation(project(":core:util"))

}